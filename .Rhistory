EnhancedVolcano(
merged_res,
lab = merged_res$target_symbol,
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 1e-100,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
)
dev.off()
# Store in KEGG input list
#kegg_input[[stage]] <- sorted_res
}
stage=1
# Extract DESeq2 results and filter columns
filtered_res <- res_list[[stage]][, c("log2FoldChange", "padj")]
# Match the rownames (miRNAs) in DESeq2 results with miRNAs in annotation data and extract the matched 'entrezid'
matched_anno <- mirna_anno_results[[stage]][mirna_anno_results[[stage]]$mature_mirna_id %in% rownames(filtered_res), c("mature_mirna_id", "target_entrez","target_symbol")]
# Merge the filtered DESeq2 results with the matched annotation data
merged_res <- merge(matched_anno, filtered_res, by.x = "mature_mirna_id", by.y = "row.names")
View(merged_res)
# Generate and save the EnhancedVolcano plot
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=6, height=4, units="in", res=100)
EnhancedVolcano(
merged_res,
lab = merged_res$target_symbol,
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 1e-100,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
)
View(merged_res)
EnhancedVolcano(
merged_res,
lab = merged_res$target_symbol,
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
)
dev.off()
rownames(res)
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=6, height=4, units="in", res=100)
EnhancedVolcano(
merged_res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
)
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=6, height=4, units="in", res=100)
EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
)
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=6, height=4, units="in", res=100)
EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
)
dev.off()
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
volcano_plot<-EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
)
tiff(file=plot_filename,
width=6, height=4, units="in", res=100)
volcano_plot
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
volcano_plot<-plot(EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
))
tiff(file=plot_filename,
width=6, height=4, units="in", res=100)
volcano_plot
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=6, height=4, units="in", res=100)
plot(EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
))
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=100, height=20, units="in", res=100)
plot(EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
))
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=50, height=20, units="in", res=100)
plot(EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
))
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=20, units="in", res=100)
plot(EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
))
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
# Loop through each category and perform the DESeq2
for (stage in stages) {
if (stage != "Normal") {
res <- as.data.frame(results(dds_deseq, contrast = c("group", stage, "Normal")))
#plot volcano
plot_title <- paste("Normal vs", stage)
plot_filename <- file.path('result/volcanoplots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
plot(EnhancedVolcano(
res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'padj',
xlim = c(-8, 8),
title = plot_title,
pCutoff = 0.001,
FCcutoff = 2,
pointSize = 2.0,
labSize = 3.0
))
dev.off()
############################
res <- subset(res, padj <= 0.001)
res <- res %>%
filter(log2FoldChange >= 2 | log2FoldChange <= -2)
res_list[[stage]] <- res
}
}
KEGG_enrichment <- list()
for (disease_stage in names(res_list)) {
# Extract the miRNA IDs (rownames)
entrez_ids <- mirna_anno_results[[disease_stage]]$target_entrez
KEGG<-enrichKEGG(
entrez_ids,
organism = 'hsa',
keyType = "kegg",
minGSSize = 10,
maxGSSize = 500,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
use_internal_data = FALSE
)
plot_title <- paste("KEGG enrichment cancer ", stage)
plot_filename <- file.path('result/kegg_enrichment/plots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
barplot(edo, showCategory=20)
dev.off()
#store result
KEGG_enrichment[[disease_stage]] <- KEGG@result
}
for (disease_stage in names(res_list)) {
# Extract the miRNA IDs (rownames)
entrez_ids <- mirna_anno_results[[disease_stage]]$target_entrez
KEGG<-enrichKEGG(
entrez_ids,
organism = 'hsa',
keyType = "kegg",
minGSSize = 10,
maxGSSize = 500,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
use_internal_data = FALSE
)
plot_title <- paste("KEGG enrichment cancer ", stage)
plot_filename <- file.path('result/kegg_enrichment/plots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
barplot(KEGG, showCategory=20)
dev.off()
#store result
KEGG_enrichment[[disease_stage]] <- KEGG@result
}
KEGG_enrichment <- list()
for (disease_stage in names(res_list)) {
# Extract the miRNA IDs (rownames)
entrez_ids <- mirna_anno_results[[disease_stage]]$target_entrez
KEGG<-enrichKEGG(
entrez_ids,
organism = 'hsa',
keyType = "kegg",
minGSSize = 10,
maxGSSize = 500,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
use_internal_data = FALSE
)
plot_title <- paste("KEGG enrichment cancer ", stage)
plot_filename <- file.path('result/kegg_enrichment/plots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
barplot(KEGG, showCategory=20)
dev.off()
#store result
KEGG_enrichment[[disease_stage]] <- KEGG@result
}
for (disease_stage in names(res_list)) {
# Extract the miRNA IDs (rownames)
entrez_ids <- mirna_anno_results[[disease_stage]]$target_entrez
KEGG<-enrichKEGG(
entrez_ids,
organism = 'hsa',
keyType = "kegg",
minGSSize = 10,
maxGSSize = 500,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
use_internal_data = FALSE
)
plot_title <- paste("KEGG enrichment cancer ", disease_stage)
plot_filename <- file.path('result/kegg_enrichment/plots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
plot(barplot(KEGG, showCategory=20))
dev.off()
#store result
KEGG_enrichment[[disease_stage]] <- KEGG@result
}
GO_enrichment <- list()
for (disease_stage in names(res_list)) {
# Extract the miRNA IDs (rownames)
entrez_ids <- mirna_anno_results[[disease_stage]]$target_entrez
go<-enrichGO(
entrez_ids,
OrgDb = org.Hs.eg.db,
keyType = "ENTREZID",
ont = "BP",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
minGSSize = 10,
maxGSSize = 500,
readable = FALSE,
pool = FALSE
)
#store result
plot_title <- paste("GO enrichment cancer ", disease_stage)
plot_filename <- file.path('result/go_enrichment/plots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
plot(barplot(go, showCategory=20))
dev.off()
GO_enrichment[[disease_stage]] <- go@result
}
KEGG_enrichment <- list()
for (disease_stage in names(res_list)) {
# Extract the miRNA IDs (rownames)
entrez_ids <- mirna_anno_results[[disease_stage]]$target_entrez
KEGG<-enrichKEGG(
entrez_ids,
organism = 'hsa',
keyType = "kegg",
minGSSize = 10,
maxGSSize = 500,
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
use_internal_data = FALSE
)
plot_title <- paste("KEGG enrichment cancer ", disease_stage)
plot_filename <- file.path('result/kegg_enrichment/plots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
plot(barplot(KEGG, showCategory=20))
dev.off()
csv_filename <- file.path('result/kegg_enrichment/table', paste(plot_title, ".csv", sep = ""))
write.csv(KEGG@result, file = csv_filename, row.names = TRUE)
#store result
KEGG_enrichment[[disease_stage]] <- KEGG@result
}
GO_enrichment <- list()
for (disease_stage in names(res_list)) {
# Extract the miRNA IDs (rownames)
entrez_ids <- mirna_anno_results[[disease_stage]]$target_entrez
go<-enrichGO(
entrez_ids,
OrgDb = org.Hs.eg.db,
keyType = "ENTREZID",
ont = "BP",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.2,
minGSSize = 10,
maxGSSize = 500,
readable = FALSE,
pool = FALSE
)
#store result
plot_title <- paste("GO enrichment cancer ", disease_stage)
plot_filename <- file.path('result/go_enrichment/plots', paste(plot_title, ".tiff", sep = ""))
tiff(file=plot_filename,
width=20, height=10, units="in", res=100)
plot(barplot(go, showCategory=20))
dev.off()
csv_filename <- file.path('result/go_enrichment/table', paste(plot_title, ".csv", sep = ""))
write.csv(go@result, file = csv_filename, row.names = TRUE)
GO_enrichment[[disease_stage]] <- go@result
}
